{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://sergio-3628a-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'fetching data to cart failed'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'sending...',\n      message: 'sending cart data...'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://sergio-3628a-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending data to server failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success',\n        message: 'send cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'sending data to cart failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["F:/udemy/redux-advanced/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch('https://sergio-3628a-default-rtdb.firebaseio.com/cart.json');\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Could not fetch data!')\r\n      }\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(cartActions.replaceCart({\r\n        items: cartData.items || [],\r\n        totalQuantity:  cartData.totalQuantity\r\n      }));\r\n    } catch(error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'error',\r\n          message: 'fetching data to cart failed'\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(uiActions.showNotification({\r\n      status: 'pending',\r\n      title: 'sending...',\r\n      message: 'sending cart data...'\r\n    }));\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch('https://sergio-3628a-default-rtdb.firebaseio.com/cart.json', {\r\n          method: 'PUT', \r\n          body: JSON.stringify(cart)\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Sending data to server failed');\r\n        }\r\n    }\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'success',\r\n          message: 'send cart data successfully'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'error',\r\n          message: 'sending data to cart failed'\r\n        })\r\n      )\r\n    }\r\n\r\n  }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,CAAC;MAE1F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAC/BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAGH,QAAQ,CAACG;MAC3B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAMC,KAAK,EAAE;MACbZ,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOlB,QAAQ,IAAK;IACzBA,QAAQ,CAACH,SAAS,CAACgB,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,EAAE;QACvFiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAAChB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACJ,CAAC;IAED,IAAI;MACF,MAAMc,WAAW,CAAC,CAAC;MACnBnB,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdZ,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EAEF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}