{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { useDispatch } from \"react-redux\";\nexport const fetchCartData = () => {\n  return distatch => {};\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'sending...',\n      message: 'sending cart data...'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://sergio-3628a-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending data to server failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'success',\n        message: 'send cart data successfully'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'error',\n        message: 'sending data to cart failed'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","useDispatch","fetchCartData","distatch","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error"],"sources":["F:/udemy/redux-advanced/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport const fetchCartData = () => {\r\n  return distatch => {\r\n    \r\n  }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(uiActions.showNotification({\r\n      status: 'pending',\r\n      title: 'sending...',\r\n      message: 'sending cart data...'\r\n    }));\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch('https://sergio-3628a-default-rtdb.firebaseio.com/cart.json', {\r\n          method: 'PUT', \r\n          body: JSON.stringify(cart)\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Sending data to server failed');\r\n        }\r\n    }\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'success',\r\n          message: 'send cart data successfully'\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'error',\r\n          message: 'sending data to cart failed'\r\n        })\r\n      )\r\n    }\r\n\r\n  }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAOC,QAAQ,IAAI,CAEnB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACN,SAAS,CAACO,gBAAgB,CAAC;MAClCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,EAAE;QACvFC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;IACJ,CAAC;IAED,IAAI;MACF,MAAMR,WAAW,CAAC,CAAC;MACnBL,QAAQ,CACNN,SAAS,CAACO,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdd,QAAQ,CACNN,SAAS,CAACO,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EAEF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}